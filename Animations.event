
#ifdef _FE8_
	
	// I'm going to install animations with a separate instance of EA because they don't change much, and they're added at the start of the ROM. 
		// They take up a significant amount of processing time, and this will help a lot with dev building.
	#include "Tools/Tool Helpers.txt"
	#include "EAstdlib.event"
	#include "Extensions/Hack Installation.txt"
	#include "Definitions.event"

	#define FreeSpace
	#define Free_Space
	#define FreeSpaceA $B2A610
	#define FreeSpaceB $E47200
	#define FreeSpaceC $EFB2E0
	
	#define EndOfROM $FE4000
	#define EndofROM EndOfROM
	
	#define EndOfAnimations $1300000
	
	ORG FreeSpaceA
	
	ORG CURRENTOFFSET + 0x08
	ClassAnimTable:
	FILL 0x20 * 0x200 // Allocate 0x200 entries for the ClassAnimTable.
	PUSH
	ORG ClassAnimTable
	#incbin "CSV/ClassAnimTable.dmp" // Vanilla ClassAnimTable.
	POP
	{
	#include "Graphics/BattleAnimations/BattleAnimations2.event"
	}
	MESSAGE First animation block ends at CURRENTOFFSET
	ASSERT $C00000 - CURRENTOFFSET
	
	ORG FreeSpaceB
	{
	#include "Graphics/BattleAnimations/BattleAnimations1.event"
	}
	MESSAGE Second animation block ends at CURRENTOFFSET
	ASSERT $EE0000 - CURRENTOFFSET
	
	ORG FreeSpaceC
	{
	#include "Graphics/BattleAnimations/BattleAnimations3.event"
	}
	MESSAGE Third animation block ends at CURRENTOFFSET
	ASSERT $FE0000 - CURRENTOFFSET
	
	ORG EndofROM
	{
	#include "Graphics/BattleAnimations/BattleAnimations4.event"
	}
	MESSAGE Fourth animation block ends at CURRENTOFFSET
	ASSERT EndOfAnimations - CURRENTOFFSET // Yell at me if I add animations without updating offsets.
	
#endif // _FE8_
