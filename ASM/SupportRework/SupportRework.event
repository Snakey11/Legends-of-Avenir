
/*
#define AddSupport(Character1,Character2) "SVAL 0x1 Character1 ; SVAL 0x2 Character2 ; ASMC CallAddSupport|1"
#define AddSupportNoPopup(Character1,Character2) "SVAL 0x1 Character1 ; SVAL 0x2 Character2 ; ASMC CallAddSupportNoPopup|1"
#define IncreaseSupport(Character1,Character2) "SVAL 0x1 Character1 ; SVAL 0x2 Character2 ; ASMC CallIncreaseSupport|1"
#define IncreaseSupportNoPopup(Character1,Character2) "SVAL 0x1 Character1 ; SVAL 0x2 Character2 ; ASMC CallIncreaseSupportNoPopup|1"
#define SetSupport(Character1,Character2,Level) "SVAL 0x1 Character1 ; SVAL 0x2 Character2 ; SVAL 0x3 Level ; ASMC CallSetSupport|1"
#define ClearSupport(Character1,Character2) "SVAL 0x1 Character1 ; SVAL 0x2 Character2 ; ASMC CallClearSupport|1"
#define SupportConvo(Character1,Character2) "CHAR 0x00 0x00 [Character1, Character2] SupportReturnFalse|1"
*/
ALIGN 4
#inctext lyn "MasterSupportCalculations.elf" "Hooks.elf"
ALIGN 4
BaseSupportSelectConvoTextLink:
SHORT BaseSupportSelectConvoText
PUSH
ORG $A1980
POIN PrepScreenSupportProc
ORG (TextTable+(4*BaseSupportTextID1))
WORD 0x8203EFC0
ORG (TextTable+(4*BaseSupportTextID2))
WORD 0x8203EFC0+40
ORG (TextTable+(4*BaseSupportTextID3))
WORD 0x8203EFC0+80
ORG (TextTable+(4*BaseSupportTextID4))
WORD 0x8203EFC0+120
ORG (TextTable+(4*BaseSupportTextID5))
WORD 0x8203EFC0+160
ORG (TextTable+(4*BaseSupportTextID6))
WORD 0x8203EFC0+200
ORG (TextTable+(4*BaseSupportTextID7))
WORD 0x8203EFC0+240
ORG (TextTable+(4*BaseSupportTextID8))
WORD 0x8203EFC0+280
POP
ALIGN 4
IncreaseSupportPopupDefinitions:
WORD 0x0C 0x5A // Play sound 0x5A
WORD 0x06 SupportIncreasedToText // Show "Support level increased to ".
WORD 0x07 0x0203EFC0 // Show string at 0x0203EFC0 (This will be C, B, or A).
WORD 0x06 0x22 // Snow "." at the end.
WORD 0x00 0x00 // End

ALIGN 4
CallTestMenuProcConversationEvents: // This is called assuming the text ID to show is in memory slot 0x2
EVBIT_T 0x4
//SetBackground(0x0E)
CALL $9EE2E8 // Sets the background of index in slot 0x2. Set by BaseSupportConvoX.
SADD 0x032 // Move slot 0x3 into 0x2
TEXTSTART
TEXTSHOW -1 // Shows text in slot 0x2. Set into slot 0x3 by BaseSupportConvoX.
TEXTEND
REMA
ASMC BaseSupportIncreaseSupport|1
FADI 0x5
CLEAN
SVAL 0x5 0x1 // Used by the base support proc to see if the events are finished running.
NoFade
ENDA

/*
ALIGN 4
BaseSupportMenuGeometry:
BYTE 4 2 20 0           // Geomerty, order: X, Y, Width, Height (Height doesn't matter)
WORD 1                  // idk
POIN BaseSupportMenuCommands // Command Definitions
WORD 0 0 0 0 0 0        // No routines to handle B press/R press/construction/etc
*/
BaseSupportMenuCommands:
	EventMenuCommand(BaseSupportTextID1,BaseSupportUsability,BaseSupportConvo1)
	EventMenuCommand(BaseSupportTextID2,BaseSupportUsability,BaseSupportConvo2)
	EventMenuCommand(BaseSupportTextID3,BaseSupportUsability,BaseSupportConvo3)
	EventMenuCommand(BaseSupportTextID4,BaseSupportUsability,BaseSupportConvo4)
	EventMenuCommand(BaseSupportTextID5,BaseSupportUsability,BaseSupportConvo5)
	EventMenuCommand(BaseSupportTextID6,BaseSupportUsability,BaseSupportConvo6)
	EventMenuCommand(BaseSupportTextID7,BaseSupportUsability,BaseSupportConvo7)
	EventMenuCommand(BaseSupportTextID8,BaseSupportUsability,BaseSupportConvo8)
EventMenuCommandEnd
/*
MESSAGE Master support calculations are at MasterSupportCalculation
MESSAGE Stat screen stuff is at DisplaySupportStatScreen1 and DisplaySupportStatScreen2
MESSAGE Prep screen usability is at PrepScreenSupportUsability
MESSAGE Setting the ID for the convo starts at BaseSupportConvo1
MESSAGE Ensuring the menu selection is at EnsureSelection
MESSAGE Setting up the conversation is at SetUpConvo
MESSAGE Calling the conversation is at CallConversation
MESSAGE Base support increase support is at BaseSupportIncreaseSupport
MESSAGE The text is made at BuildSupportMenuText
MESSAGE Increase support is at IncreaseSupport
MESSAGE Convo usability is at BaseSupportUsability
MESSAGE Geometry shit is at BuildSupportMenuGeometry
MESSAGE Call clear support is at CallClearSupport*/
