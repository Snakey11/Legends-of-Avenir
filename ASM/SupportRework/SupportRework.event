
#ifdef _FE8_
	#ifndef SUPPORT_REWORK
		#define SUPPORT_REWORK
		
		#include "Support Definitions.event"
		
		ALIGN 4
		#inctext lyn "MasterSupportCalculations.elf" "Hooks.elf"
		
		ALIGN 4
		BaseSupportSelectConvoTextLink:
		SHORT BaseSupportSelectConvoText
		
		PUSH
		ORG $A1980
		POIN PrepScreenSupportProc
		ORG (TextTable+(4*BaseSupportTextID1))
		WORD 0x8203EFC0
		ORG (TextTable+(4*BaseSupportTextID2))
		WORD 0x8203EFC0+40
		ORG (TextTable+(4*BaseSupportTextID3))
		WORD 0x8203EFC0+80
		ORG (TextTable+(4*BaseSupportTextID4))
		WORD 0x8203EFC0+120
		ORG (TextTable+(4*BaseSupportTextID5))
		WORD 0x8203EFC0+160
		ORG (TextTable+(4*BaseSupportTextID6))
		WORD 0x8203EFC0+200
		ORG (TextTable+(4*BaseSupportTextID7))
		WORD 0x8203EFC0+240
		ORG (TextTable+(4*BaseSupportTextID8))
		WORD 0x8203EFC0+280
		
		ORG $28290
		SHORT 0x4770 // Eliminate gaining support points.
		POP
		
		ALIGN 4
		IncreaseSupportPopupDefinitions:
		WORD 0x0C 0x5A // Play sound 0x5A
		WORD 0x06 SupportIncreasedToText // Show "Support level increased to ".
		WORD 0x07 0x0203EFC0 // Show string at 0x0203EFC0 (This will be C, B, or A).
		WORD 0x06 0x22 // Snow "." at the end.
		WORD 0x00 0x00 // End

		CallBaseConvoEvents: // This is called assuming the text ID to show is in memory slot 0x2
		EVBIT_T 0x4
		//SetBackground(0x0E)
		CALL $9EE2E8 // Sets the background of index in slot 0x2. Set by BaseSupportConvoX.
		SADD 0x032 // Move slot 0x3 into 0x2
		TEXTSTART
		TEXTSHOW -1 // Shows text in slot 0x2. Set into slot 0x3 by BaseSupportConvoX.
		TEXTEND
		REMA
		ASMC BaseSupportIncreaseSupport|1
		FADI 0x5
		CLEAN
		SVAL 0x5 0x1 // Used by the base support proc to see if the events are finished running.
		NoFade
		ENDA

		SupportConvoEvents: // This is called when viewing a support (talk) convo.
		EVBIT_T 0x4
		TEXTSTART
		TEXTSHOW -1 // Shows text in slot 0x2.
		TEXTEND
		REMA
		SADD 0x032 // Move slot 0x3 into 0x2
		ASMC CallIncreaseSupport|1
		NoFade
		ENDA
		
		#ifndef BaseSupportTextID1
			#define BaseSupportTextID1 0x2D
		#endif
		#ifndef BaseSupportTextID2
			#define BaseSupportTextID2 0x2E
		#endif
		#ifndef BaseSupportTextID3
			#define BaseSupportTextID3 0x2F
		#endif
		#ifndef BaseSupportTextID4
			#define BaseSupportTextID4 0x30
		#endif
		#ifndef BaseSupportTextID5
			#define BaseSupportTextID5 0x31
		#endif
		#ifndef BaseSupportTextID6
			#define BaseSupportTextID6 0x32
		#endif
		#ifndef BaseSupportTextID7
			#define BaseSupportTextID7 0x33
		#endif
		#ifndef BaseSupportTextID8
			#define BaseSupportTextID8 0x34
		#endif
		
		BaseSupportMenuCommands:
			EventMenuCommand(BaseSupportTextID1,BaseSupportUsability,BaseSupportConvo1)
			EventMenuCommand(BaseSupportTextID2,BaseSupportUsability,BaseSupportConvo2)
			EventMenuCommand(BaseSupportTextID3,BaseSupportUsability,BaseSupportConvo3)
			EventMenuCommand(BaseSupportTextID4,BaseSupportUsability,BaseSupportConvo4)
			EventMenuCommand(BaseSupportTextID5,BaseSupportUsability,BaseSupportConvo5)
			EventMenuCommand(BaseSupportTextID6,BaseSupportUsability,BaseSupportConvo6)
			EventMenuCommand(BaseSupportTextID7,BaseSupportUsability,BaseSupportConvo7)
			EventMenuCommand(BaseSupportTextID8,BaseSupportUsability,BaseSupportConvo8)
		EventMenuCommandEnd
		
	#endif // SUPPORT_REWORK
#else
	ERROR Support rework is for FE8 only!
#endif
