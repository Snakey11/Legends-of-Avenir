#ifndef MSG_MODIFIER_ROUTINES_EVENT
#define MSG_MODIFIER_ROUTINES_EVENT

#include "eastdlib.event"
#include "Extensions/Hack Installation.txt"

#include "MSGDefinitions.event"

ALIGN 4

prAddUnitFullCon:
	rAdd; rCallForUnit(pConGetter)

prAddUnitFullMov:
	rAdd; rCallForUnit(pMovGetter)

prAddUnitMaxHP:
	rAddCharByte(0x12)

prAddUnitCurHP:
	rAddCharByte(0x13)

prAddUnitPow:
	rAddCharByte(0x14)

prAddUnitSkl:
	rAddCharByte(0x15)

prAddUnitSpd:
	rAddCharByte(0x16)

prAddUnitDef:
	rAddCharByte(0x17)

prAddUnitRes:
	rAddCharByte(0x18)

prAddUnitLck:
	rAddCharByte(0x19)

prAddUnitConBonus:
	rAddCharByte(0x1A)

prAddUnitMovBonus:
	rAddCharByte(0x1D)
	
prAddEquipHP:
	rAdd; rCallForEquip(prGetItemHPBonus)

prAddEquipPow:
	rAdd; rCallForEquip(prGetItemPowBonus)

prAddEquipSkl:
	rAdd; rCallForEquip(prGetItemSklBonus)

prAddEquipSpd:
	rAdd; rCallForEquip(prGetItemSpdBonus)

prAddEquipDef:
	rAdd; rCallForEquip(prGetItemDefBonus)

prAddEquipRes:
	rAdd; rCallForEquip(prGetItemResBonus)

prAddEquipLck:
	rAdd; rCallForEquip(prGetItemLckBonus)

prAddUnitBaseCon:
	#incbin "asm/AddBaseCon.bin"

prAddUnitBaseMov:
	#incbin "asm/AddBaseMov.bin"

prCheckForHPCap:
	#incbin "asm/CheckForHPCap.bin"

prAddUnitBarrierModifier:
	#incbin "asm/AddUnitBarrierModifier.bin"

prAdjustMountedAid:
	#incbin "asm/AdjustMountedAid.bin"

prNullifyIfGuardAI:
	rIfHasGuardAI; rNullify

prHalveIfRescuing: // 0x00000010 = rescue state flag
	rIfHasStateFlag(0x00000010); rIfHasNotSkill(SaviorID); rHalveStat

prAdjustAidIfMounted: // 0x00000001 = mounted aid flag
	rIfHasAttribute(0x00000001); rCall(prAdjustMountedAid)

prDecrement:
	rSub; rConst(1)

#endif // MSG_MODIFIER_ROUTINES_EVENT
