//Currently FE8 Only
//v1.7

#ifndef FreeSpace
	#ifdef _FE8_
		#define FreeSpace $B30000
	#endif
	ORG FreeSpace
#endif

#ifndef ItemEffectRevamp
	#define ItemEffectRevamp
#endif

#include "Extensions/Hack Installation.txt"
#include "IE_RoutineDefinitions.event"

//#include "../_ItemArrayMacros.txt"

#ifdef _FE8_
	ALIGN 4
	//MESSAGE Applying Item Effect Revamp
	
	/*
	EffectJumpTable:
	//SHORT 0x4B03	//ldr r3, Item_GetStat_EffectID
	//BL(IEIDJump)
	//SHORT 0x4B01	//ldr r3, IERevampTable
	SHORT 0x4B00
	B(EIDJump)
	IEIDJump:
	//SHORT 0x4718	//bx r3
	POIN IERevampTable
	//POIN Item_GetStat_EffectID | 1
	*/
	/*
	Label:
	SHORT 0x4A00	//ldr r2
	B(EIDJump)
	POIN 
	*/
	/*
	EIDJump:
	SHORT 0x2110	//mov r1, 0x10	@table length
	SHORT 0x4348	//mul r0,r1
	SHORT 0x1880	//add r0, r0, r2
	SHORT 0x18C0	//add r0, r0, r3
	SHORT 0x6800	//ldr r0, [r0]
	SHORT 0x4687	//mov r15, r0
	*/
	PUSH
		ORG $28896	//Item Usability
		BL(Item_GetStat_EffectID)
		SHORT 0x2100
		BL(EffectJumpTable)
		SHORT 0x4687	//mov r15, r0
		//jumpToHack(EffectJumpTable)
		
		ORG $28E72	//Item Effect Targeting
		BL(Item_GetStat_EffectID)
		SHORT 0x2108
		BL(EffectJumpTable)
		SHORT 0x4687	//mov r15, r0
		//jumpToHack(EffectJumpTable)
		
		ORG $2FC62	//Item Use Effect
		BL(Item_GetStat_EffectID)
		ORG $2FC72
		SHORT 0x210C
		BL(EffectJumpTable)
		SHORT 0x4687	//mov r15, r0
		//jumpToHack(EffectJumpTable)
		
		ORG $29F18	//Prescreen Item Usability
		BL(Item_GetStat_EffectID)
		SHORT 0x2104 //0x0
		BL(EffectJumpTable)
		SHORT 0x4687	//mov r15, r0
		//jumpToHack(EffectJumpTable)
		
		//Items Effects with Box Display (Stat Boosters, Metis Tome)
		ORG $2F81C
		BL(IBEffectJumpTable)
		SHORT 0x4687	//mov r15, r0
		
		ORG $2F8A4
		BL(GetStatBoosterText)
		SHORT 0x2900	//cmp 	r1, #0x0
		SHORT 0xD000	//beq that skips the next line
		SHORT 0x468F	//mov 	r15, r1
		B($2F90E)
		
		#include "GetStatBoosterText.event"
		
		//BL(Item_GetStat_EffectID)
		//B($2F8AA)	//IB Jump 
		//SHORT 0x0
		/*
		ORG $2F89E
		SHORT 0x1C28	//mov r0,r5
		B($2F90E)		//to end of routine
		
		//ORG $2F9A2
		//IB_NULL case
		//#define IBNull "IB_NULL | 0x8000000"
		//SHORT 0x1C28	//mov r0,r5
		//B($2F90E)		//to end of routine
		
		ORG $2F90C
		B($2F83A)
		
		ORG $2F8B4
		POIN IBArray
	*/
	//change checks for status staves to check for the effect ids instead
	ORG $2F010	//$2F082
		#include "StatusStaffEffect.event"
		
	//change checks for dancer rings to check for the effect id instead
	ORG $2FBBC	//$2FBEA
	#ifndef DancerRingRefresh
		#include "DancerRingEffect.event"
	#else
		#include "DancerRingEffect_Refresh.event"
	#endif //DancerRingRefresh
		
	//change part that updates status effect on BattleTargetUnit
	ORG $30038
		SHORT 0x3030 0x7001 //add 	r0,0x30; strb 	r1,[r0]
		
	//set up a separate animation association table for item effects
	ORG $5800C
		BL($78258)	//use spell anim id getter instead of manually looping
		SHORT 0x1C02
		B($5802E)	//skip loop since the getter is called insead
		//might overwrite the loop with something else later
	ORG $78214
		#include "ItemAnimAssociation_p1.event"
		POIN SpellAssociationTable UseEffectAnimTable
	
	//for use space where tables used to be to put stuff in bl range
	ORG $28E80 //$288A8
		EffectJumpTable:
		SHORT 0x4B03	//ldr r3, Item_GetStat_EffectID
		SHORT 0x2210	//mov r2, #0x10
		SHORT 0x4350	//mul r0,r2
		SHORT 0x1840	//add r0, r0, r1
		SHORT 0x18C0	//add r0, r0, r3
		SHORT 0x6800	//ldr r0, [r0]
		SHORT 0x4770 0	//bx 	lr, nop
		POIN IERevampTable
		
		IBEffectJumpTable:
		SHORT 0xB500	//push 	{lr}
		BL(Item_GetStat_EffectID)
		SHORT 0x0080	//lsl 	r0, r0, #0x2
		SHORT 0x4901	//ldr 	r1, IBArray
		SHORT 0x1840	//add 	r0, r0, r1
		SHORT 0x6800	//ldr 	r0, [r0]
		SHORT 0xBD00	//pop 	{pc}
		POIN IBArray
		
		Item_GetStat_EPV_Jump:
		jumpToHack(Item_GetStat_EPV)

		ALIGN 4
		#include "ItemAnimAssociation_p2.event"
		#include "ItemAnimAssociation_p3.event"
		#include "LockpickCheck.event"
	POP
	
	#include "_KeyCommandsFix.event"
#else
	ERROR "This is for FE8 only"
#endif
/*

+ Redo item effect tables
* optimize prep screen item effects
+ convert all tables to csvs
	-revise macros to make sure they still work afterwards
+ redo everything to use vanilla effect id getter to save space
* optimize thing for door/chest commands
+ redo master key with actual effort this time
*/