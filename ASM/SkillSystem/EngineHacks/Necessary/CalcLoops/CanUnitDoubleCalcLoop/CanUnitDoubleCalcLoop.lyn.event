ALIGN 4
PUSH
ORG CURRENTOFFSET+$1;CanUnitDoubleCalcLoopFunc:
ORG CURRENTOFFSET+$c0;IsDefenderSnag:
ORG CURRENTOFFSET+$18;IsAttackerEclipsing:
ORG CURRENTOFFSET+$28;IsAttackerUsingStone:
ORG CURRENTOFFSET+$1c;IsAttackerWeaponUnableToDouble:
POP
SHORT $4C2B $4D2C $1C06 $1C0F $B4C0 $235E $5EEA $5EE3 $1A99 $2900 $DD06 $B404 $4A27 $7812 $4291 $BC04 $DD18 $E006 $1AD1 $B404 $4A23 $7812 $4291 $BC04 $DD10 $4C1F $4D1F $1C20 $305E $8800 $1C29 $315E $8809 $4288 $DB02 $6034 $603D $E001 $603C $6035 $2601 $E004 $4C16 $4D17 $6034 $603D $2600 $4F17 $683B $2B00 $D00A $469E $1C20 $1C29 $1C32
BYTE $0 $F8
SHORT $2800 $D018 $2801 $D004 $3704 $E7F1 $1C30 $BCC0 $E013 $BCC0 $4C0A $4D0B $1C20 $305E $8800 $1C29 $315E $8809 $4288 $DB02 $6034 $603D $E001 $603C $6035 $2001 $E001 $BCC0 $2000 $BCF0 $BC02 $4708
BYTE $EC $A4 $3 $2 $6C $A5 $3 $2
POIN DoublingThresholdLink
POIN CanUnitDoubleCalcLoop
SHORT $B430 $1C04 $1C0D $205E $5E28 $2AFA $DC01 $2002 $E000 $2000 $BC30 $4770 $B530 $1C04 $1C0D $1C20 $304A $8800 $4905 $468E
BYTE $0 $F8
SHORT $2803 $D001 $2002 $E000 $2000 $BC30 $BC02 $4708
BYTE $0 $0 $24 $77 $1 $8
SHORT $B430 $1C04 $1C0D $1C20 $3048 $7800 $28B5 $D001 $2002 $E000 $2000 $BC30 $4770 $46C0 $B530 $1C04 $1C0D $1C20 $304A $8800 $4905 $468E
BYTE $0 $F8
SHORT $280C $D001 $2002 $E000 $2000 $BC30 $BC02 $4708
BYTE $0 $0 $24 $77 $1 $8
