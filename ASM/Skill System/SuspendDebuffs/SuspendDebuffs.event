#ifndef SUSPEND_EXPANSION
#define SUSPEND_EXPANSION

#ifndef SUSPEND_EXPANSION_DEBUFFS
#define SUSPEND_EXPANSION_DEBUFFS

// Suspend Expansion + Debuffs
// hack by CrazyColorz5, with additions by circleseverywhere and Kirb

#ifdef _FE8_

  {

  PUSH
    // Debuffs

    ORG 0x17D7C // To zero out the additional data upon making a new unit.
      gotoHackWithR3(Initialization)
  
    ORG 0xA5808 // This is for loading a previously deployed unit for the first time on a map.
      gotoHackWithR3(Reloading)
  
    ORG 0x188A8 // This is for decreasing the debuffs each turn/ending rally
      jumpToHack(PerTurn)

    // prevent debuffs and loading issue (Kirb)

    ORG 0xBA30
      WORD 0x203ED40

    ORG 0xBA54
      WORD 0x203ED40

    ORG 0xFA34
      WORD 0x203ED40

    ORG 0xD5B80
      WORD 0x203ED40

    // new stat getters

    // ORG 0x19190 //commented out because modular stat getters
      // gotoHack(MaxHPGetter)

    // ORG 0x191B0
      // gotoHack(StrengthGetter)
  
    // ORG 0x191D0
      // gotoHack(SkillGetter)
  
    // ORG 0x19210
      // gotoHack(SpeedGetter)
  
    // ORG 0x19250
      // gotoHack(DefenseGetter)
  
    // ORG 0x19270
      // gotoHack(ResistanceGetter)
  
    // ORG 0x19298
      // gotoHack(LuckGetter)
  
    // ORG 0x19230
      // gotoHack(MagicGetter)

    // Weapons/Battle

    ORG 0x2B54E
      SHORT 0x46C0 // nop
      jumpToHack(damagedThisTurn)
  
    ORG 0x2B422
      #incbin "asm/Debuffs/Set Hit This Turn.dmp"
  
    // ORG 0x2C086
      // SHORT 0x46C0 // nop
      // jumpToHack(setDebuffs)
  
    ORG 0x2C078
      callHack_r3(setDebuffs)

    //Expanded Suspend
  
    ORG 0xA6446 //Disable checksum check
      SHORT 0x46C0 // nop
  
    ORG 0xA6408 //Stop checksum calculation, as it loads all of the save data into RAM.
      SHORT 0x4770
  
    ORG 0xA30EC //Make all suspends to first slot.
      WORD 0x000000D4
  
    ORG 0xA2FE4 //Length of suspend data
      WORD 0x00003EF0

    ORG 0xA5B88
      gotoHackWithR3(saveHack)
  
    ORG 0xA5D2A
      SHORT 0x46C0 // nop for alignment
      gotoHackWithR3(loadHack)

  POP

  // ALIGN 4
  // MaxHPGetter:
    // #incbin "asm/Debuffs/MaxHP Getter.dmp"
    // WORD DebuffTable

  // ALIGN 4
  // StrengthGetter:
    // #incbin "asm/Debuffs/Strength Getter.dmp"
    // WORD DebuffTable
  
  // ALIGN 4
  // SkillGetter:
    // #incbin "asm/Debuffs/Skill Getter.dmp"
    // WORD DebuffTable

  // ALIGN 4
  // SpeedGetter:
    // #incbin "asm/Debuffs/Speed Getter.dmp"
    // WORD DebuffTable

  // ALIGN 4
  // DefenseGetter:
    // #incbin "asm/Debuffs/Defense Getter.dmp"
    // WORD DebuffTable

  // ALIGN 4
  // ResistanceGetter:
    // #incbin "asm/Debuffs/Resistance Getter.dmp"
    // WORD DebuffTable

  // ALIGN 4
  // LuckGetter:
    // #incbin "asm/Debuffs/Luck Getter.dmp"
    // WORD DebuffTable

  // ALIGN 4
  // MagicGetter:
    // #incbin "asm/Debuffs/Magic Getter_A.dmp"
    // BL(MagBonusGetter)
    // #incbin "asm/Debuffs/Magic Getter_B.dmp"
    // POIN ItemTable
    // WORD DebuffTable

  // ALIGN 4
  // movGetter:
    // #incbin "asm/Move Getter_A.dmp"
    // BL(MovBonusGetter) // callHack_r3(MovBonusGetter)
    // #incbin "asm/Move Getter_B.dmp"

  ALIGN 4
  damagedThisTurn:
    #incbin "asm/Debuffs/Set Damaged This Turn.dmp"

  ALIGN 4
  setDebuffs:
    #incbin "asm/Debuffs/Set Debuffs.dmp"
    WORD DebuffTable
    POIN ItemTable
    POIN WeaponDebuffTable

  ALIGN 4
  Initialization:
    #incbin "asm/Debuffs/New Initializer.dmp"
    WORD DebuffTable

  ALIGN 4
  Reloading:
    #incbin "asm/Debuffs/New Reload.dmp"
    WORD DebuffTable

  ALIGN 4
  PerTurn:
    #incbin "asm/Debuffs/ProcessDebuffs.dmp"
    WORD DebuffTable

  ALIGN 4
  saveHack:
    #incbin "asm/Expanded Suspend/SaveMoreBytesHack.dmp"

  ALIGN 4
  loadHack:
    #incbin "asm/Expanded Suspend/LoadMoreBytesHack.dmp"

  }

#else // _FE8_
  ERROR Suspend Expansion and Debuff hack is for FE8
#endif // _FE8_

#endif // SUSPEND_EXPANSION_DEBUFFS
#endif // SUSPEND_EXPANSION
