
EventPointerTable(PrologueEvent,ThisChapter)

//Label ThisChapter
ThisChapter:
POIN TurnBasedEvents
POIN CharacterBasedEvents
POIN LocationBasedEvents
POIN MiscBasedEvents
POIN EndMainPointer EndMainPointer EndMainPointer
POIN EndMainPointer
POIN TrapData TrapData
POIN Units Units
POIN $0 $0 $0 $0 $0 $0
POIN BeginningScene EndingScene
//LabelEnd

//Label TurnBasedEvents
TurnBasedEvents:
END_MAIN

//Label CharacterBasedEvents
ALIGN 32
CharacterBasedEvents:
END_MAIN

//Label LocationBasedEvents
LocationBasedEvents:
END_MAIN

//Label MiscBasedEvents
MiscBasedEvents:
CauseGameOverIfLordDies
END_MAIN

//Label TrapData
TrapData:
ENDTRAP
ALIGN 4

//Label Units
Units:
EndUnit

//Label BeginingScene
BeginningScene:
//ASMC SetName|1
ASMC NewTimer|1
ASMC SetDifficulty|1 // For now, force difficulty to Normal.
MUSC Aquatic_Dystopia
ENUF 0x69
ENUF 0x6A
ENUF 0x6B
ENUF 0x6C
SVAL 0x1 False // This indicates that we DON'T want to do things associated with our world map proc.
ASMC LoadSmallWorldMap|1
FADU 0x5
STAL 0x20
Text(PrologueStartingText)
STAL 0x10
EnterStop
FADI 0x5
STAL 0x10
ASMC 0x48281 // Name selector.
STAL 0x10
CLEAN
SVAL 0x1 False
ASMC LoadSmallWorldMap|1
FADU 0x5
STAL 0x10
ASMC BurnRNs|1
ASMC EndTimer|1
RANDOMNUMBER 6 // Randomly show some text!
SVAL 0x1 0x1
SVAL 0x2 0x2
SVAL 0x3 0x3
SVAL 0x4 0x4
SVAL 0x5 0x5
SVAL 0x6 0x6
TEXTSTART
BNE 0x0 0x0 0xC
	TEXTSHOW PrologueNameText1
	GOTO 0x6
LABEL 0x0
BNE 0x1 0x1 0xC
	TEXTSHOW PrologueNameText2
	GOTO 0x6
LABEL 0x1
BNE 0x2 0x2 0xC
	TEXTSHOW PrologueNameText3
	GOTO 0x6
LABEL 0x2
BNE 0x3 0x3 0xC
	TEXTSHOW PrologueNameText4
	GOTO 0x6
LABEL 0x3
BNE 0x4 0x4 0xC
	TEXTSHOW PrologueNameText5
	GOTO 0x6
LABEL 0x4
BNE 0x5 0x5 0xC
	TEXTSHOW PrologueNameText6
	GOTO 0x6
LABEL 0x5
BNE 0x6 0x6 0xC
	TEXTSHOW PrologueNameText7
LABEL 0x6
TEXTEND
TEXTSHOW2 PrologueAlmostCreatorText
TEXTEND
REMA

MUSC Avatars_of_Avenir
ASMC CallCharacterCreator|1 // This fades in and out on its own.

EVBIT_T 0x8 // Tell the event engine we're faded in.

SVAL 0x1 True
SVAL 0x2 PrologueWorldMapEvents|IsPointer
ASMC StartSmallWorldMap|1

ASMC GetMode|1
SVAL 0x1 0x1
SVAL 0x2 0x2
SVAL 0x3 0x3
BNE 0x7 0x1 0xC
	MoveToChapter(Mercenary1)
	GOTO 0x9
LABEL 0x7
BNE 0x8 0x2 0xC
	MoveToChapter(Military1)
	GOTO 0x9
LABEL 0x8
BNE 0x9 0x3 0xC
	MoveToChapter(Mage1)
LABEL 0x9
NoFade
ENDA

//Label EndingScene
EndingScene:
ENDA

//Label WorldMapEvents
PrologueWorldMapEvents:
EVBIT_MODIFY 0x1
_0xC220
STAL 32
WM_SHOWDRAWNMAP 0x0 0x0 0x0 0x10 0x0
STAL 2 // This STAL is necessary, or else palettes get borked.
WM_FADEOUT 0x0 0x0 0x0
MUSC Aquatic_Dystopia

EVBIT_MODIFY 0x0
STAL 0x40
Text(ProloguePrepForMapText)
STAL 0x10
WM_TEXTDECORATE
EVBIT_MODIFY 0x0
STAL 60
WM_SHOWTEXTWINDOW 0x0 0x28 0x1
WM_WAITFORTEXT
WM_TEXTSTART
WM_TEXT PrologueWMMainText
TEXTEND
STAL 0x10
WM_MOVECAM2 0x0 0x0 0x00 0x0 0x10 0x3C 0x0 // WM_MOVECAM2 Value1 *Starting X* *Starting Y* *Ending X* *Ending Y* Speed Delay 
STAL 90
WM_HIGHLIGHT 0x0 CesariaGlowy 0x0
TEXTCONT
TEXTEND
STAL 0x08
WM_HIGHLIGHTCLEAR1 0x0 CesariaGlowy 0x0
WM_HIGHLIGHTCLEAR2 0x0 CesariaGlowy 0x0
STAL 0x10
WM_MOVECAM2 0x0 0x0 0x10 0x0 0x30 0x3C 0x0 
STAL 90
WM_HIGHLIGHT 0x0 ArcanaeGlowy 0x0
STAL 0x10
TEXTCONT
TEXTEND
STAL 0x08
WM_HIGHLIGHTCLEAR1 0x0 ArcanaeGlowy 0x0
WM_HIGHLIGHTCLEAR2 0x0 ArcanaeGlowy 0x0
STAL 0x10
WM_MOVECAM2 0x0 0x0 0x30 0x0 (-0x02) 0x3C 0x0
STAL 90
WM_HIGHLIGHT 0x0 HaedricGlowy 0x0
STAL 0x10
TEXTCONT
TEXTEND
STAL 0x08
WM_HIGHLIGHTCLEAR1 0x0 HaedricGlowy 0x0
WM_HIGHLIGHTCLEAR2 0x0 HaedricGlowy 0x0
STAL 0x10
WM_MOVECAM2 0x0 0x0 (-0x02) 0x0 (-0x0C) 0x3C 0x0
STAL 90
WM_HIGHLIGHT 0x0 AltiaGlowy 0x0
STAL 0x10
TEXTCONT
TEXTEND
STAL 0x08
WM_HIGHLIGHTCLEAR1 0x0 AltiaGlowy 0x0
WM_HIGHLIGHTCLEAR2 0x0 AltiaGlowy 0x0
STAL 0x10

ASMC GetMode|1
WM_TEXTSTART
SVAL 0x1 0x1
SVAL 0x2 0x2
SVAL 0x3 0x3
BNE 0x7 0x1 0xC
	WM_TEXT PrologueWMMercenaryText
	TEXTEND
	WM_MOVECAM2 0x0 0x0 (-0x0C) 0x0 (-0x02) 0x3C 0x0
	STAL 0x08
	TEXTCONT
	TEXTEND
	WM_HIGHLIGHT 0x0 HaedricGlowy 0x0
	STAL 0x08
	TEXTCONT
	TEXTEND
	WM_SHOWPORTRAIT LeonMug 1332
	STAL 6 26
	TEXTCONT
	TEXTEND
	STAL 30
	WM_HIGHLIGHTCLEAR1 0x0 HaedricGlowy 0x0
	WM_HIGHLIGHTCLEAR2 0x0 HaedricGlowy 0x0
	WM_CLEARPORTRAIT 0x0 0x100 0x0
	STAL 0x20
	GOTO 0x9
LABEL 0x7
BNE 0x8 0x2 0xC
	WM_TEXT PrologueWMMilitaryText
	TEXTEND
	WM_MOVECAM2 0x0 0x0 (-0x0C) 0x0 0x10 0x3C 0x0
	STAL 0x08
	TEXTCONT
	TEXTEND
	WM_HIGHLIGHT 0x0 CesariaGlowy 0x0
	STAL 0x08
	TEXTCONT
	TEXTEND
	STAL 10
	WM_HIGHLIGHTCLEAR1 0x0 CesariaGlowy 0x0
	WM_HIGHLIGHTCLEAR2 0x0 CesariaGlowy 0x0
	TEXTCONT
	TEXTEND
	WM_SHOWPORTRAIT RexMug 0x1B0 // The top byte of this is a bitfield! Bit 0 is direction to slide in from. Bit 2 is direction for facing. idk what bit 3 and 4 do.
	STAL 6 26
	TEXTCONT
	TEXTEND
	WM_CLEARPORTRAIT 0x0 0x100 0x0
	STAL 32
	TEXTCONT
	TEXTEND
	WM_SHOWPORTRAIT EmperorMug 0x1B0
	STAL 6 26
	TEXTCONT
	TEXTEND
	STAL 30
	WM_CLEARPORTRAIT 0x0 0x100 0x0
	STAL 0x20
	GOTO 0x9
LABEL 0x8
BNE 0x9 0x3 0xC
	WM_TEXT PrologueWMMageText
	TEXTEND
	WM_MOVECAM2 0x0 0x0 (-0x0C) 0x0 0x30 0x3C 0x0
	STAL 0x08
	TEXTCONT
	TEXTEND
	WM_HIGHLIGHT 0x0 ArcanaeGlowy 0x0
	STAL 0x08
	TEXTCONT
	TEXTEND
	STAL 30
	WM_HIGHLIGHTCLEAR1 0x0 ArcanaeGlowy 0x0
	WM_HIGHLIGHTCLEAR2 0x0 ArcanaeGlowy 0x0
LABEL 0x9
STAL 0x20

WM_TEXTSTART
WM_TEXT PrologueWMEndingText
TEXTEND
FADI 0x3
STAL 0x10
WM_REMOVETEXT
SVAL 0xB 0x1
NoFade
ENDA
