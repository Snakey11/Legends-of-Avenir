
#ifdef _FE8_

	//PROTECT $889A0 $889F6 // 64, 109


	#include "Tools/Tool Helpers.txt"
	#include "EAstdlib.event"
	#include "Extensions/Hack Installation.txt"
	#include "Definitions.event"

	#define FreeSpace
	#define Free_Space
	#define FreeSpaceA $B2A610
	#define FreeSpaceB $E47200
	#define FreeSpaceC $EFB2E0
	
	#define EndOfROM $FE4000
	#define EndofROM EndOfROM
	
	#define BLRange $1C2270
	#define FreeSpaceBLRange BLRange
	#define BlRange BLRange
	
	#define IncludeBigStuff
	#define SkillSystemIncluded
	#ifndef __PUBLIC__
		#define __DEBUG__
	#endif
	//#define TESTING
	#ifdef __PRIVATE__
		MESSAGE Compiling PRIVATE release
	#endif
	#ifdef __PUBLIC__
		MESSAGE Compiling PUBLIC release
	#endif
	#ifndef __NO_MERCENARY__
		MESSAGE Compiling with mercenary
	#else
		MESSAGE Compiling without mercenary
	#endif
	#ifndef __NO_MILITARY__
		MESSAGE Compiling with military
	#else
		MESSAGE Compiling without military
	#endif
	#ifndef __NO_MAGE__
		MESSAGE Compiling with mage
	#else
		MESSAGE Compiling without mage
	#endif
	#ifdef __DEBUG__
		MESSAGE Compiling with debug features
	#endif
	
	#ifdef TESTING // For clean-ROM-style testing
	
		#include "TEST/Test Buildfile.event"
		
	#else
		ORG FreeSpaceA
		ALIGN 16
		ORG CURRENTOFFSET + 0x08
		ClassAnimTable:
		ORG CURRENTOFFSET + 0x20 * 0x200 // Allocate 0x200 entries for the ClassAnimTable.
		PUSH
		ORG ClassAnimTable
		#incbin "CSV/ClassAnimTable.dmp" // Vanilla ClassAnimTable.
		POP
		#ifdef IncludeBigStuff
			{
			#include "Graphics/Battle Animations/Battle Animations 2.event" // FULL!
			}
		#endif
		MESSAGE First animation block ends at CURRENTOFFSET
		//MESSAGE There is ( $BFFFFF - CURRENTOFFSET ) of space available
		ASSERT $C00000 - CURRENTOFFSET
		
		ORG FreeSpaceB
		#ifdef IncludeBigStuff
			{
			#include "Graphics/Battle Animations/Battle Animations 1.event" // FULL!
			}
		#endif
		MESSAGE Second animation block ends at CURRENTOFFSET
		//MESSAGE There is ( $EE0000 - CURRENTOFFSET ) of space available
		ASSERT $EE0000 - CURRENTOFFSET
		
		ORG FreeSpaceC
		#ifdef IncludeBigStuff
			{
			#include "Graphics/Battle Animations/Battle Animations 3.event" // FULL!
			}
		#endif
		MESSAGE Third animation block ends at CURRENTOFFSET
		//MESSAGE There is ( $FE0000 - CURRENTOFFSET ) of space available
		ASSERT $FE0000 - CURRENTOFFSET
		
		ORG EndofROM
		#ifdef IncludeBigStuff
			{
			#include "Graphics/Battle Animations/Battle Animations 4.event"
			}
		#endif
		MESSAGE Fourth animation block ends at CURRENTOFFSET

		ALIGN 16
		//Text
		TextTable:
		#incbin "Text/Vanilla Text Table.dmp"
		#include "Text/Install Text Data.event"
		MESSAGE Text data ends at CURRENTOFFSET
		
		ALIGN 16
		//CSV
		#include "CSV/Master CSV Installer.event"
		MESSAGE Tables end at CURRENTOFFSET
		
		ALIGN 16
		//Music
		{
		#include "Music/_Master Music Installer.event"
		}
		MESSAGE Music data ends at CURRENTOFFSET
		
		ALIGN 16
		//Miscellaneous Graphical
		#include "Graphics/Master Graphical Installer.event"
		MESSAGE Misc graphical data ends at CURRENTOFFSET
		
		ALIGN 16
		//Maps
		#define TMX2EA
		#include "Map Data/FE8 Tilesets/New Tilesets/Tileset Installer.event"
		#include "Map Data/Master Map Installer.event"	
		MESSAGE Map data ends at CURRENTOFFSET
		
		ALIGN 16	
		//ASM
		#include "ASM/Master ASM Installer.event"
		MESSAGE ASM data ends at CURRENTOFFSET
		
		ALIGN 16
		//Events
		#include "Events/Master Event Installer.event"
		MESSAGE Events end at CURRENTOFFSET
		
		ALIGN 16
		WORD 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 // Prevent NUPS from cutting off the last 6 bytes
	#endif
	
#else

	ERROR "You stupid! Write FE8 events!"

#endif
