
#ifdef _FE8_
	
	#include "Tools/Tool Helpers.txt"
	#include "EAstdlib.event"
	#include "Extensions/Hack Installation.txt"
	#include "Definitions.event"

	#define FreeSpace
	#define Free_Space
	#define FreeSpaceA $B2A610
	#define FreeSpaceB $E47200
	#define FreeSpaceC $EFB2E0
	
	#define EndOfROM $FE4000
	#define EndofROM EndOfROM
	
	#define ClassAnimTable $B2A618 // This is never going to change as well.
	#define EndOfAnimations $1300000 // This should give me plenty of space. The animation event file errors if it passes this.
	
	#define BLRange $1C2270
	#define FreeSpaceBLRange BLRange
	#define BlRange BLRange
	
	#ifndef __PUBLIC__
		#define __DEBUG__
	#endif
	#ifdef __PRIVATE__
		MESSAGE Assembling PRIVATE release
	#endif
	#ifdef __PUBLIC__
		MESSAGE Assembling PUBLIC release
	#endif
	#ifndef __NO_MERCENARY__
		MESSAGE Assembling with mercenary
	#else
		MESSAGE Assembling without mercenary
	#endif
	#ifndef __NO_MILITARY__
		MESSAGE Assembling with military
	#else
		MESSAGE Assembling without military
	#endif
	#ifndef __NO_MAGE__
		MESSAGE Assembling with mage
	#else
		MESSAGE Assembling without mage
	#endif
	#ifdef __DEBUG__
		MESSAGE Assembling with debug features
	#endif
	
	ORG EndOfAnimations
	
	//Text
	TextTable:
	#incbin "Text/VanillaTextTable.dmp"
	#include "Text/InstallTextData.event"
	MESSAGE Text data ends at CURRENTOFFSET
	
	//CSV
	#include "CSV/MasterCSVInstaller.event"
	MESSAGE Tables end at CURRENTOFFSET
	
	//Music
	{
	#include "Music/_MasterMusicInstaller.event"
	}
	MESSAGE Music data ends at CURRENTOFFSET
	
	//Miscellaneous Graphical
	#include "Graphics/MasterGraphicalInstaller.event"
	MESSAGE Misc graphical data ends at CURRENTOFFSET
	
	//Maps
	#define TMX2EA
	#include "Maps/Tilesets/NewTilesets/TilesetInstaller.event"
	#include "Maps/MasterMapInstaller.event"	
	MESSAGE Map data ends at CURRENTOFFSET
	
	//ASM
	#include "ASM/MasterASMInstaller.event"
	MESSAGE ASM data ends at CURRENTOFFSET
	
	//Events
	#include "Events/MasterEventInstaller.event"
	MESSAGE Events end at CURRENTOFFSET
	
	ALIGN 4
	WORD 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 // Prevent NUPS from cutting off the last 6 bytes
#else

	ERROR "You stupid! Write FE8 events!"

#endif
