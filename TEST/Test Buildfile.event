
#ifndef IncludeBigStuff
	#define IncludeBigStuff
#endif
#ifndef SkillSystemIncluded
	#define SkillSystemIncluded
#endif
#ifdef __DEBUG__
	#undef __DEBUG__
#endif

#define ClassAnimTable (0xc00008-0x20)
#define AnimTableEntry(index) "ORG ClassAnimTable + (index * 0x20)"

#include "Table Definitions.txt"
//#define ItemTable 0x809B34
#define ChapterDataTable 0x8B0890
#define ItemTable 0x809B34

//#define Stairs(StairID,X1,Y1,X2,Y2) "LOCA StairID [X1,Y1] 0x22 ; LOCA StairID [X2,Y2] 0x22"

#define HealingTile(X,Y,HealPercent) "LOCA HealPercent [X,Y] 0x23"

ORG EndofROM

ALIGN 4
#include "Text/Install Text Data.event"

ALIGN 4
#include "Skill System/Skill System Installer.event"

ALIGN 4
//#inctext lyn "ASM/PhantomAxe/PhantomAxe.elf" "ASM/PhantomAxe/Definitions.elf"
//PhantomAxeLink:
//BYTE IronAxe

//#include "CSV/Tables/Item Table/Item Table.event"

//#include "CSV/Tables/Item Table/FE8 Item Usability Pointer Editor.event"

//#include "CSV/Tables/Item Table/FE8 Item Effect Pointer Editor.event"

//#include "CSV/Tables/Item Table/FE8 Item Target Pointer Editor.event"

//#include "CSV/Tables/Class and Character Tables/Class Table.event"

ALIGN 4
#include "Lots of Rooms.event"

//ALIGN 4
//InfiniteMove:
//#incbin "Infinite Move.dmp"

//PUSH
//ORG 0x1879C
//jumpToHack(InfiniteMove)
//POP

ALIGN 4
//#include "ASM/LoreBook/Lore Book Proc.event"

ALIGN 4
//#include "ASM/SummonStuff/Summon.event"

ALIGN 4
//#include "Effectiveness.event"

ALIGN 4
//#include "Spells/Test Installer.event" // I need to see if the CSA engine dodge glitch happens in a clean ROM.

ALIGN 4
//#include "ASM/Stairs/Stairs.event"

ALIGN 4
//#include "Phantom/Phantom Axe.event"
ALIGN 4
//#include "Phantom/Phantom Hand Axe.event"
ALIGN 4
//#include "Phantom/Phantom Unarmed.event"

ALIGN 4
#include "Events/Test Events.event" // Load an assassin (has the dodge glitch) and a mage with a custom spell.

ALIGN 4
//#include "ASM/Arms Scroll FE8/EA Installer.event"

//ALIGN 4
//#include "Map Sprites/Map Sprite Installer.event"

//ALIGN 4
//#include "Spell Association Table/Spell Association Table.event"

//ALIGN 4
//#include "Chapter Data Table/Chapter Data Table.event"

ALIGN 4
//#include "CSV/Master CSV Installer.event"

ALIGN 4
#include "Skills/FE8 Class Skill Editor.event"

ALIGN 4
#include "Skills/FE8 Level Up Skill Editor.event"

ALIGN 4
#include "Skills/FE8 Personal Skill Editor.event"

ALIGN 4
#include "Skills/FE8 Skill Animation Editor.event"

ALIGN 4
#include "Skills/FE8 Skill Description Editor.event"

ALIGN 4
//#include "ASM/Master ASM Installer.event"

ALIGN 4
WeaponDebuffTable:
defWeaponDebuffs(0,0,0,0,0,0,0) //0x0: let 0-index entry be no debuffs.

ALIGN 4
EndMainPointer:
END_MAIN

SetTilesetData(Prologue,0x6C,0x6D,0x6E,6CAnims,LagdouSet)//Lots of Rooms

//PUSH
//ORG $5B3F8
//POIN SpellTable
//POP

/*
PUSH

ORG $16410
POIN ItemTable
ORG $16440
POIN ItemTable
ORG $16470
POIN ItemTable
ORG $164A0
POIN ItemTable
ORG $164D0
POIN ItemTable
ORG $16530
POIN ItemTable
ORG $16500
POIN ItemTable
ORG $16570
POIN ItemTable
ORG $166D0
POIN ItemTable
ORG $1671C
POIN ItemTable
ORG $1678C
POIN ItemTable
ORG $167E0
POIN ItemTable
ORG $1683C
POIN ItemTable
ORG $168C4
POIN ItemTable
ORG $1683C
POIN ItemTable
ORG $1698C
POIN ItemTable
ORG $16A10
POIN ItemTable
ORG $16AD0
POIN ItemTable
ORG $16B18
POIN ItemTable
ORG $16BB4
POIN ItemTable
ORG $16C14
POIN ItemTable
ORG $16C7C
POIN ItemTable
ORG $16D04
POIN ItemTable
ORG $16DD4
POIN ItemTable
ORG $16F0C
POIN ItemTable
ORG $16FA4
POIN ItemTable
ORG $17028
POIN ItemTable
ORG $1707C
POIN ItemTable
ORG $170C8
POIN ItemTable
ORG $170F8
POIN ItemTable
ORG $1727C
POIN ItemTable
ORG $172D8
POIN ItemTable
ORG $1735C
POIN ItemTable
ORG $173AC
POIN ItemTable
ORG $17420
POIN ItemTable
ORG $174A4
POIN ItemTable
ORG $174E4
POIN ItemTable
ORG $17514
POIN ItemTable
ORG $1752C
POIN ItemTable
ORG $17544
POIN ItemTable
ORG $17560
POIN ItemTable
ORG $17580
POIN ItemTable
ORG $175A4
POIN ItemTable
ORG $175A4
POIN ItemTable
ORG $175D0
POIN ItemTable
ORG $175F0
POIN ItemTable
ORG $17608
POIN ItemTable
ORG $17620
POIN ItemTable
ORG $17638
POIN ItemTable
ORG $1765C
POIN ItemTable
ORG $17680
POIN ItemTable
ORG $1769C
POIN ItemTable
ORG $176B4
POIN ItemTable
ORG $176CC
POIN ItemTable
ORG $176E4
POIN ItemTable
ORG $176FC
POIN ItemTable
ORG $17718
POIN ItemTable
ORG $17738
POIN ItemTable
ORG $17750
POIN ItemTable
ORG $17768
POIN ItemTable
ORG $17794
POIN ItemTable
//ORG $177AC
//POIN ItemTable
ORG $177C0
POIN ItemTable
//ORG $177B8
//POIN ItemTable
ORG $17718
POIN ItemTable
ORG $1C1FB8
POIN ItemTable
ORG $1C20E0
POIN ItemTable

ORG $2FC8C
POIN ItemEffectTable
ORG $288AC
POIN ItemUsabilityTable
ORG $29F30
POIN PrepScreenUsabilityTable
ORG $28E88
POIN ItemTargetTable

ORG $58014
POIN SpellAssociationTable
ORG $78240
POIN SpellAssociationTable

ORG $3462C
POIN ChapterDataTable
ORG $B5E68
POIN ChapterDataTable
ORG $B5F98
POIN ChapterDataTable
ORG $B61C0
POIN ChapterDataTable
ORG $B6328
POIN ChapterDataTable
ORG $B6500
POIN ChapterDataTable
*/

PUSH
//Essential Fixes for FE8
//Install with Event Assembler
//Set Default Options
  ORG $30d8a  //animations type 2
  SHORT $3306
  ORG $30da6  //Game/text speed Fast, Autocursor off
  SHORT $22d0

//Break HP Cap for Players/NPCs (credit Solum)
  ORG $181ee
  SHORT $1c11
  ORG $2bf4c
  BYTE $7f

//skip hand axe wait for return
  
  ORG $514e
  SHORT 0
  ORG $58c90
  POIN $596cc
  
  
//12 Tracks/16 Sounds Fix (credit Agro/Brendor)
  ORG $2900
  SHORT $e00c
  ORG $2924
  SHORT $280c $d00e $200c
  ORG $22440c
  BYTE $10
  ORG $224414
  SHORT $67b0 $0300 $0010

//Fix Weak Promoted Enemies (credit Gryz)
  ORG $180b4
  SHORT $2a00 $dc00 $2201

//Hold A to speed up movement (credit Gryz)
  ORG $794ee
  SHORT 0

//Skip H&S screen
  ORG $CC20C
  SHORT 0

//Skip Intro cutscene
  ORG $C6714
  SHORT 0

//Skip New Game text
  ORG $C4928
  SHORT 0

//Silence New Game music
  ORG $C4A0C
  BYTE 0

//Autocursor Fix (credit Vennobennu)
  ORG $3325a
  SHORT $e021

//Pierce Glitch Fix (credit Brendor)
  ORG $2b290
  BYTE $a0
  // ORG $2b482
  // BYTE $a0

//Unlock Sound Room songs
  ORG $aede0
  BYTE $FF

//CG Fade glitch
  ORG $EBCA
  BYTE 8
  ORG $EDE0
  SHORT $1c0a

//Enemy Control Glitch Fix (Credits to Brendor)
  ORG 0x377A0
  SHORT 0xE007

//Mode Coefficient EXP fix (credit Vennobennu)
  ORG 0x2C474
  WORD 0

#include "Extensions/Hack Installation.txt"
//Anti-Huffman Patch, by Hextator and Nintenlord
{
  ORG 0x2BA4 //Pointer Tester
  BYTE 0x00 0xB5 0xC2 0x0F 0x02 0xD0 
  BL(uncompHelper) /*0x07 0xF0 0x63 0xFB*/
  SHORT 0xE001
  BL(compressedHelper) /*0x07 0xF0 0x58 0xFB*/
  SHORT 0xBD00
  
  ORG 0xA24A
  BYTE 0x05 0xD0 0x04 0x49 0x28 0x1C 0x00 0xF0 0x16 0xF8 0x35 0x60 0x00 0xE0 0x01 0x48 0x70 0xBC 0x00 0xBD 0x00 0x00 
  WORD 0x0202A6AC
  
  compressedHelper:
  SHORT 0xB500 0x4A02 0x6812
  BL(0xD18C8) //In-game unencoding routine, I assume
  SHORT 0xBD00 
  WORD 0x03004150
  
  uncompHelper:
  jumpToHack(AntiHuffmanFreeSpace) //FEditor uses r2 instead of r3, but it shouldn't matter.
  
  ORG 0x464470
  AntiHuffmanFreeSpace: //Can be relocated as necessary.
  BYTE 0x80 0x23 0x1B 0x06 0xC0 0x1A 0x02 0x78 0x0A 0x70 0x01 0x31 0x01 0x30 0x00 0x2A 0xF9 0xD1 0x70 0x47
}

//Animation Hacks by Hextator
{
//C01 hack
ORG $46446c
WORD 0x80522cd
ORG $5138
WORD $47004800 $8464421
ORG $464420
WORD 0x401820FF 0xD00A2801 0xD8062818 0x6A10D103 0x62103804 0x4B0BE013 0x4B0B4718 0x041B4718 0x009B0E1B 0x3101A102 0x4908468E 0x46C04708 0xD1002801 0x33042300 0x1AC06A10 0x1C206210 0x46C0BD30 0x08005145 0x08005159 0x080522CD

//C48 hack
ORG $58d64
WORD $8464400
ORG $464400
WORD 0x3D046A3D 0x022D682D 0xA5020C28 0x46AE3501 0x47284D01 0x47004801 0x08071991 0x080596CD
}
POP
